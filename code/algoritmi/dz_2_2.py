"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ

"""


def even_numbers(number, i=0, j=0):
    if number == 0:
        return i, j
    else:
        value = number % 10
        number = number // 10
        if value % 2 == 0:
            i += 1
        else:
            j += 1
        return even_numbers(number, i, j)


try:
    numbers = int(input("Введите любое число: "))
    print(f"Столько четных и нечетных цифр в числе: {even_numbers(numbers)}")
except ValueError:
    print("Вы ввели неизвестный символ,а не число!!")
